var searchIndex = new Map(JSON.parse('[\
["web3_closest_provider",{"doc":"","t":"KFFFNNNNNNONMNONNNNNNMNMNONNNMNONNNNNNNNNNNNMN","n":["ClosestWeb3Provider","ClosestWeb3RpcProviderSelector","JsonRpcResponse","LibError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current_response_time_per_url","deserialize","destroy","destroy","error","fmt","fmt","fmt","from","from","from","get_fastest_provider","get_fastest_provider","init","init","interval_handle","into","into","into","is_ready","is_ready","message","perform_web3_client_version_request","process_response_time_check","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait_until_ready","wait_until_ready"],"q":[[0,"web3_closest_provider"],[46,"core::result"],[47,"serde::de"],[48,"core::fmt"],[49,"core::fmt"],[50,"alloc::vec"],[51,"core::time"],[52,"tokio::sync::watch"],[53,"std::collections::hash::map"],[54,"std::sync::mutex"],[55,"alloc::sync"],[56,"core::any"],[57,"core::future::future"],[58,"core::marker"]],"d":["Defines methods for interacting with a Web3 provider …","A concrete implementation of the <code>ClosestWeb3Provider</code> trait …","Represents a JSON-RPC response with an optional error …","A custom error type for representing errors within the …","","","","","","","Shared map storing the response time for each provider.","","Stops the balancer and clears its data.","","Optional error message or object.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the URL of the provider with the fastest response …","","Initializes the provider balancer with a list of URLs.","","Sender for sending messages to the response time check …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Checks if the balancer is ready to provide the fastest …","","The error message.","Sends a JSON-RPC request to a given URL and returns the …","Asynchronously checks the response times of the providers …","","","","","","","","","","","Waits until the balancer is ready to provide the fastest …",""],"i":[0,0,0,0,6,1,9,6,1,9,6,1,4,6,1,1,9,9,6,1,9,4,6,4,6,6,6,1,9,4,6,9,6,6,9,6,1,9,6,1,9,6,1,9,4,6],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[2,[1]]],3],[4,5],[6,5],0,[[1,7],8],[[9,7],8],[[9,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,10],[6,10],[[[11,[10]],12],4],[[[11,[10]],12],6],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,13],[6,13],0,[14,[[2,[15,9]]]],[[[11,[10]],[16,[5]],[19,[[18,[[17,[10,15]]]]]],12],5],[-1,10,[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,[[2,[-2]]],[],[]],[-1,20,[]],[-1,20,[]],[-1,20,[]],[4,[[0,[[22,[],[[21,[5]]]],23]]]],[6,5]],"c":[],"p":[[5,"JsonRpcResponse",0],[6,"Result",46],[10,"Deserializer",47],[10,"ClosestWeb3Provider",0],[1,"tuple"],[5,"ClosestWeb3RpcProviderSelector",0],[5,"Formatter",48],[8,"Result",48],[5,"LibError",0],[5,"String",49],[5,"Vec",50],[5,"Duration",51],[1,"bool"],[1,"str"],[1,"u128"],[5,"Receiver",52],[5,"HashMap",53],[5,"Mutex",54],[5,"Arc",55],[5,"TypeId",56],[17,"Output"],[10,"Future",57],[10,"Send",58]],"b":[[16,"impl-Debug-for-LibError"],[17,"impl-Display-for-LibError"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
